@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Store Transaction";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<!-- PAGE-HEADER -->
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i>Admin Consol</a></li>
        <li class="breadcrumb-item active" aria-current="page">Store Transaction</li>
    </ol>
</div>
<!-- PAGE-HEADER END -->

<div class="row">
    <div class="col-md">
        <div class="card overflow-hidden">
            <div class="card-header">
                <h3 class="card-title">Store Transaction</h3>
            </div>
            <div class="card-body">
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Store Name &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <div class="input-box">
                                    <select class="form-control" id="storename">
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Receipt Upload &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <input type="file" class="form-control" id="receiptimg" required>
                            </div>
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Credit Balnce &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <input type="number" class="form-control" name="crblance" id="crblance" placeholder="Credit Balnce" readonly>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Debit Balance &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <input type="number" class="form-control" name="dbbalance" id="dbbalance" placeholder="Debit Balance" required>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Outstanding &nbsp;<span style="color: red;"><b>*</b></span></label>
                                <input type="number" class="form-control" name="outstanding" id="outstanding" placeholder="Outstanding" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <button type="button" id="btncreate" class="btn btn-radius btn-success">Create</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script>
        // Get references to the input and result elements
        const crblanceElement = document.getElementById('crblance');
        const dbbalanceElement = document.getElementById('dbbalance');
        const outstandingElement = document.getElementById('outstanding');

        // Add event listeners to both input elements
        crblanceElement.addEventListener('input', calculateOutstanding);
        dbbalanceElement.addEventListener('input', calculateOutstanding);

        // Function to calculate the outstanding value and update the textbox
        function calculateOutstanding() {
            // Get the values from the input elements and convert them to numbers
            const crblance = parseFloat(crblanceElement.value);
            const dbbalance = parseFloat(dbbalanceElement.value);

            // Check if both inputs are valid numbers
            if (!isNaN(crblance) && !isNaN(dbbalance)) {
                // Perform the subtraction operation
                const outstandingValue = crblance - dbbalance;

                // Update the outstanding textbox with the calculated value
                outstandingElement.value = outstandingValue;
            } else {
                // If any input is not a valid number, show an error message or reset the outstanding textbox
                outstandingElement.value = 'Invalid Input';
            }
        }
    </script>




    <script>
        Getbeat()
        async function Getbeat(Id) {
            var opt = '';
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Store/GetStoreListByUserId/" + @Context.Session.GetInt32("UserId"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (res) {
                    var options = [];
                    options.push('<option value = "" > Select Store </option>');
                    for (var i = 0; i < res.data.length; i++) {
                        if (Id == res.data[i].beatId) {
                            opt = 'selected'
                        } else {
                            opt = '';
                        }
                        options.push('<option value = "' + res.data[i].storeId + '" ' + opt + ' > ' + res.data[i].storeName + '</option>');
                    }
                    $("#storename").html(options.join(''));
                },

                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        $("#storename").change(async function () {
            var storeId = $("#storename").val()
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Store/GetSingleStore/" + storeId,
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (data) {
                    if (data) {
                        $('#crblance').val(data.creditBalance);
                    }
                    else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        });

        $("#btncreate").click(function (e) {
            if (!document.getElementById("formPost").checkValidity()) {
                e.preventDefault();
            } else {
                imgPath = '';
                var totalFiles = document.getElementById('receiptimg').files.length;
                if (totalFiles > 0) {
                    uploadFile();
                }

                var model = {
                    storeId: parseInt($("#storename").val()),
                    receipt: imgPath,
                    creditBalance: $.trim($("#crblance").val()),
                    debitBalance: $.trim($("#dbbalance").val()),
                    totalOutstanding: $.trim($("#outstanding").val()),
                    agentId: @Context.Session.GetInt32("UserId"),
                    createdBy: @Context.Session.GetInt32("UserId"),
                }
                $.ajax({
                    type: "POST",
                    url: "@apiUrl/api/CreditHistory/TransactionCreate",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status === 200) {
                            console.log(data);
                            sweetAlert({
                                html: true,
                                title: "Transaction",
                                text: "Successfully Created!",
                                type: "success"
                            });
                        } else if (data.status === "duplicate") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else if (data.status === "error") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else if (data.status == 400) {
                            sweetAlert("Validation Alert!", "Please check input data!", "warning");
                        }
                    }
                });


            }
        });

        function uploadFile() {
            var totalFiles = document.getElementById('receiptimg').files.length;
            if (totalFiles > 0) {
                var formData = new FormData();
                var files = document.getElementById('receiptimg').files;
                formData.append("file", files[0]);
                $.ajax(
                    {
                        url: "/Upload/ImgUpload",
                        data: formData,
                        processData: false,
                        contentType: false,
                        async: false,
                        type: "POST",
                        success: function (data) {
                            imgPath = data;

                        },
                        error: function (data) {
                            window.location.replace('/Message/SessionExpire');
                        }
                    }
                );
            }

        }

    </script>

}