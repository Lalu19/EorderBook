@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "My Order";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}
<!-- PAGE-HEADER -->
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i>Admin Consol</a></li>
        <li class="breadcrumb-item active" aria-current="page">Order List</li>
    </ol>
</div>

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Order List</div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="Order_Tb" class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline" style="width:100%">
                        <thead>
                            <tr>
                                <th>Order Id</th>
                                <th>Date/Time</th>
                                <th>Category</th>
                                <th>Product</th>
                                <th>Qty</th>
                                <th>Package Type</th>
                                <th>Selling Price</th>
                                <th>Store Name</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        var orderId = @ViewBag.orderId
        loadProduct()
        async function loadProduct() {
            var table = $('#Order_Tb').DataTable();
            table.destroy();
            table = $('#Order_Tb').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": ['excel', 'print'],
                "searching": true,
                "paging": true,
                "sort": true,
                "info": true,
                "ajax": {
                    "url": '@apiUrl/api/Order/GetAllOrderListbyOrderId/' + @Context.Session.GetInt32("UserId"),
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },
                "order": [],
                "columns": [
                    { "data": "autoOrderId", "orderable": true, "visible": true },
                    {
                        "data": "createdOn",
                        "render": function (data) {
                            if (data === null) return "";
                            var date = new Date(data);
                            var day = date.getDate();
                            var month = date.getMonth() + 1;
                            var year = date.getFullYear();
                            var hours = date.getHours();
                            var minutes = date.getMinutes();

                            // Format day and month with leading zeros if necessary
                            var formattedDay = (day < 10 ? "0" : "") + day;
                            var formattedMonth = (month < 10 ? "0" : "") + month;

                            // Format hours and minutes with leading zeros if necessary
                            var formattedHours = (hours % 12 || 12); // Convert to 12-hour format
                            var formattedMinutes = (minutes < 10 ? "0" : "") + minutes;

                            // Determine AM/PM
                            var amPm = hours < 12 ? "AM" : "PM";

                            // Combine all parts into the final formatted string
                            return formattedDay + "/" + formattedMonth + "/" + year + " " + formattedHours + ":" + formattedMinutes + " " + amPm;
                        }
                    },

                    { "data": "categoryName", "orderable": true, "visible": true },
                    { "data": "productDetailsName", "orderable": true, "visible": true },
                    { "data": "quantity", "orderable": true, "visible": true },
                    { "data": "packagingType", "orderable": true, "visible": true },
                    {
                        "render": function (data, type, row) {

                            return '<p">' + '₹' + row.sellingPrice + '</p>';

                        }
                    },
                    { "data": "storeName", "orderable": true, "visible": true },
                ]
            });
        }
    </script>
}