@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Product List";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<!-- PAGE-HEADER -->
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i>Admin Consol</a></li>
        <li class="breadcrumb-item active" aria-current="page">Product List</li>
    </ol>
    <div class="ml-auto">
        <a href="~/Product/ProductCreate" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> Product Create
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Product List</div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="Product_Tb" class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline" style="width:100%">
                        <thead>
                            <tr>
                                <th>Brand Name</th>
                                <th>Category Name</th>
                                <th>Product Name</th>
                                <th>Status</th>
                                <th>MRP</th>
                                <th>Selling Price</th>
                                <th>Packaging Type</th>
                                <th>Quantity</th>
                                <th>Product Image</th>
                                <th>Action</th>
                                <th>Stock Status</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        //List
        loadProduct()
        async function loadProduct() {
            var table = $('#Product_Tb').DataTable();
            table.destroy();
            table = $('#Product_Tb').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": [ 'excel',  'print'],
                "searching": true,
                "paging": true,
                "sort": true,
                "info": true,
                "ajax": {
                    "url": '@apiUrl/api/ProductDetails/GetProductDetailsListbyUserId/' + @Context.Session.GetInt32("UserId"),
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },
                "order": [],
                "columns": [
                    { "data": "brandName", "orderable": true, "visible": true },
                    { "data": "categoryName", "orderable": true, "visible": true },
                    { "data": "productDetailsName", "orderable": true, "visible": true },
                    {
                        "render": function (data, type, row) {

                            if (row.productStatus === 'OutOfStock') {
                                return '<p class="tag tag-red">' + row.productStatus + '</p>';
                            }
                            else if (row.productStatus === 'Stock') {
                                return '<p class="tag tag-lime">' + row.productStatus + '</p>';
                            }
                        }
                    },
                    { "data": "mrp", "orderable": true, "visible": true },
                    { "data": "sellingPrice", "orderable": true, "visible": true },
                    { "data": "packagingType", "orderable": true, "visible": true },
                    { "data": "quantity", "orderable": true, "visible": true },
                    {
                        "render": function (data, type, row) {
                            if (row.image === '')
                                return '';
                            else
                                return '<img style="max-width: 65%;" src="' + row.image + '"/>'

                        }
                    },
                    {
                        "render": function (data, type, row) {
                            return '<a class="btn btn-sm btn-primary" href="../Product/ProductEdit?productDetailsId=' + row.productDetailsId + '"><i class="fa fa-edit"></i></a>' + '&nbsp&nbsp<button class="btn btn-sm btn-danger" data-target="#delete" data-id=' + row.productDetailsId + ' data-title="Delete"><i class="fa fa-trash"></i></button>';

                        }
                    },
                    {
                        "render": function (data, type, row) {
                            return '<button class="btn btn-radius btn-success" data-target="#Stock" data-id=' + row.productDetailsId + ' data-title="Stock">Stock</button>&nbsp&nbsp&nbsp&nbsp' + '<button class="btn btn-radius btn-danger" data-target="#OutOfStock" data-id=' + row.productDetailsId + ' data-title="OutOfStock">Out Of Stock</button>';

                        }
                    }
                ]
            });
        }

        
        $('#Product_Tb tbody').on('click', 'button[data-target="#Stock"]', function () {
            var id = $(this).data('id');
            swal({
                html: true,
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, confirm it!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: "@apiUrl/api/ProductDetails/ProductStock/" + id,
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status == 200) {
                            $('#Product_Tb').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Product",
                                text: "Stock Successfully",
                                type: "success"
                            });
                        } else if (xhr.status == 202) {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                });
            });
        });

        $('#Product_Tb tbody').on('click', 'button[data-target="#OutOfStock"]', function () {
            var id = $(this).data('id');
            swal({
                html: true,
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, confirm it!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: "@apiUrl/api/ProductDetails/ProductOutOfStock/" + id,
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status == 200) {
                            $('#Product_Tb').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Product",
                                text: "Out Of Stock",
                                type: "success"
                            });
                        } else if (xhr.status == 202) {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                });
            });
        });

        $('#Product_Tb tbody').on('click', 'button[data-target="#delete"]', function () {
            var id = $(this).data('id');
            swal({
                html: true,
                title: "Are you sure?",
                text: "You will not be able to recover this data!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, confirm it!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: "@apiUrl/api/ProductDetails/DeleteProductDetails/" + id + "/" + @Context.Session.GetInt32("UserId"),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status == 200) {
                            $('#Product_Tb').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Product",
                                text: "Successfully deleted!",
                                type: "success"
                            });
                        } else if (xhr.status == 202) {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                });
            });
        });
    </script>
}